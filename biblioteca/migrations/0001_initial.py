# Generated by Django 4.2.23 on 2025-06-26 22:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "tipo_usuario",
                    models.CharField(
                        choices=[("aluno", "Aluno"), ("admin", "Administrador")],
                        default="aluno",
                        max_length=10,
                        verbose_name="Tipo de Usuário",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Cadastro"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Autor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome do Autor"),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Cadastro"
                    ),
                ),
            ],
            options={
                "verbose_name": "Autor",
                "verbose_name_plural": "Autores",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Categoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nome da Categoria"
                    ),
                ),
                ("descricao", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Cadastro"
                    ),
                ),
            ],
            options={
                "verbose_name": "Categoria",
                "verbose_name_plural": "Categorias",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Livro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titulo",
                    models.CharField(max_length=200, verbose_name="Título do Livro"),
                ),
                (
                    "genero",
                    models.CharField(
                        choices=[
                            ("ficcao", "Ficção"),
                            ("nao_ficcao", "Não Ficção"),
                            ("fantasia", "Fantasia"),
                            ("aventura", "Aventura"),
                            ("romance", "Romance"),
                            ("suspense", "Suspense"),
                            ("terror", "Terror"),
                            ("biografia", "Biografia"),
                            ("autoajuda", "Autoajuda"),
                            ("educacional", "Educacional"),
                        ],
                        max_length=20,
                        verbose_name="Gênero",
                    ),
                ),
                (
                    "quantidade",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantidade Total",
                    ),
                ),
                (
                    "quantidade_disponivel",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantidade Disponível",
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Cadastro"
                    ),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="livros",
                        to="biblioteca.autor",
                        verbose_name="Autor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Livro",
                "verbose_name_plural": "Livros",
                "ordering": ["titulo"],
            },
        ),
        migrations.CreateModel(
            name="Reserva",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ativa", "Ativa"),
                            ("cancelada", "Cancelada"),
                            ("expirada", "Expirada"),
                        ],
                        default="ativa",
                        max_length=10,
                        verbose_name="Status da Reserva",
                    ),
                ),
                (
                    "data_reserva",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data da Reserva"
                    ),
                ),
                (
                    "data_expiracao",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Expiração"
                    ),
                ),
                (
                    "livro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservas",
                        to="biblioteca.livro",
                        verbose_name="Livro",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservas",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reserva",
                "verbose_name_plural": "Reservas",
                "ordering": ["-data_reserva"],
            },
        ),
        migrations.CreateModel(
            name="Emprestimo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_emprestimo",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do Empréstimo"
                    ),
                ),
                (
                    "data_devolucao_prevista",
                    models.DateTimeField(verbose_name="Data de Devolução Prevista"),
                ),
                (
                    "data_devolucao",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Devolução"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ativo", "Ativo"),
                            ("devolvido", "Devolvido"),
                            ("atrasado", "Atrasado"),
                        ],
                        default="ativo",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "renovacoes",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Número de Renovações"
                    ),
                ),
                (
                    "livro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emprestimos",
                        to="biblioteca.livro",
                        verbose_name="Livro",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emprestimos",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Empréstimo",
                "verbose_name_plural": "Empréstimos",
                "ordering": ["-data_emprestimo"],
            },
        ),
        migrations.AddConstraint(
            model_name="reserva",
            constraint=models.UniqueConstraint(
                condition=models.Q(("status", "ativa")),
                fields=("usuario", "livro", "status"),
                name="unique_active_reservation_per_user_and_book",
            ),
        ),
    ]
